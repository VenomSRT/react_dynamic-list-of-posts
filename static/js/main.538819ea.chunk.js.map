{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getPosts","a","fetch","response","json","posts","data","getUserPosts","selectedUserId","filter","post","userId","getPostDetails","selectedPostId","postDetails","PostsList","selectedUser","setSelectedPostId","useState","setPosts","useEffect","then","className","map","key","id","title","type","onClick","defaultProps","getPostComments","postId","responce","comments","comment","deleteComment","commentId","url","options","method","addComment","name","email","body","JSON","stringify","NewCommentForm","setComments","setName","setEmail","setBody","onSubmit","event","preventDefault","placeholder","value","onChange","target","trimLeft","PostDetails","selectedPostData","setSelectedPostData","isVisibleComments","setIsVisibleComments","length","App","setSelectedUser","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.538819ea.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nconst getPosts = async() => {\n  const response = await fetch(`${BASE_URL}/posts`);\n  const posts = await response.json();\n\n  return posts.data;\n};\n\nexport const getUserPosts = async(selectedUserId) => {\n  const posts = await getPosts();\n\n  if (selectedUserId) {\n    return posts.filter(post => post.userId === selectedUserId);\n  }\n\n  return posts;\n};\n\nexport const getPostDetails = async(selectedPostId) => {\n  const response = await fetch(`${BASE_URL}/posts/${selectedPostId}`);\n  const postDetails = await response.json();\n\n  return postDetails.data;\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\nexport const PostsList = (\n  { selectedUser, selectedPostId, setSelectedPostId },\n) => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    getUserPosts(selectedUser).then(setPosts);\n  }, [selectedUser]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>{`[User ${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                selectedPostId === post.id\n                  ? setSelectedPostId(null)\n                  : setSelectedPostId(post.id);\n              }}\n            >\n              {\n                selectedPostId === post.id\n                  ? 'Close'\n                  : 'Open'\n              }\n            </button>\n          </li>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  selectedUser: PropTypes.number,\n  selectedPostId: PropTypes.number,\n  setSelectedPostId: PropTypes.func.isRequired,\n};\n\nPostsList.defaultProps = {\n  selectedUser: null,\n  selectedPostId: null,\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async(postId) => {\n  const responce = await fetch(`${BASE_URL}/comments`);\n  const comments = await responce.json();\n\n  return comments.data\n    .filter(comment => comment.postId === postId);\n};\n\nexport const deleteComment = async(commentId) => {\n  const url = `${BASE_URL}/comments/${commentId}`;\n  const options = {\n    method: 'DELETE',\n  };\n\n  const responce = await fetch(url, options);\n  const comments = await responce.json();\n\n  return comments.data;\n};\n\nexport const addComment = async(\n  postId,\n  name,\n  email,\n  body,\n) => {\n  const url = `${BASE_URL}/comments`;\n  const options = {\n    method: 'POST',\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  };\n\n  const responce = await fetch(url, options);\n  const comments = await responce.json();\n\n  return comments.data;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewCommentForm.scss';\nimport { addComment, getPostComments } from '../../api/comments';\n\nexport const NewCommentForm = ({ selectedPostId, setComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleSendComment = (event) => {\n    event.preventDefault();\n\n    if (name && email && body) {\n      addComment(selectedPostId, name, email, body)\n        .then(() => getPostComments(selectedPostId))\n        .then(setComments);\n\n      setName('');\n      setEmail('');\n      setBody('');\n    }\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSendComment}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value.trimLeft())}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value.trimLeft())}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value.trimLeft())}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deleteComment } from '../../api/comments';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [selectedPostData, setSelectedPostData] = useState(null);\n  const [isVisibleComments, setIsVisibleComments] = useState(true);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId).then(setSelectedPostData);\n\n    getPostComments(selectedPostId)\n      .then(setComments);\n  }, [selectedPostId]);\n\n  if (!selectedPostData) {\n    return '';\n  }\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{selectedPostData.title}</p>\n        <br />\n        <p>{selectedPostData.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        {comments.length > 0 && (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => setIsVisibleComments(!isVisibleComments)}\n          >\n            {isVisibleComments\n              ? `Hide ${comments.length} comments`\n              : `Show ${comments.length} comments`\n            }\n          </button>\n        )}\n\n        {isVisibleComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => {\n                    deleteComment(comment.id)\n                      .then(() => getPostComments(selectedPostId))\n                      .then(setComments);\n                  }}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            comments={comments}\n            setComments={setComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number,\n};\n\nPostDetails.defaultProps = {\n  selectedPostId: null,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={event => setSelectedUser(Number(event.target.value))}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUser={selectedUser}\n            selectedPostId={selectedPostId}\n            setSelectedPostId={setSelectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            selectedPostId={selectedPostId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}